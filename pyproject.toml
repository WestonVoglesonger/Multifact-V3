[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "snc"
dynamic = ["version"]
authors = [
    {name = "Weston Vogelsong", email = "westonvogelsong@gmail.com"}
]
description = "A system narrative compiler for allowing developers to write code in natural, narrative language."
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["compiler", "natural-language", "code-generation", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
]
dependencies = [
    "fastapi[all]>=0.100.0,<0.101.0",
    "psycopg2-binary>=2.9.5,<2.10.0",
    "sqlalchemy>=2.0.4,<2.1.0",
    "alembic>=1.10.2,<1.11.0",
    "python-dotenv>=1.0.0,<1.1.0",
    "pydantic>=1.8.0",
    "pydantic-settings>=2.0.0",
    "openai>=1.57.4,<1.58.0",
    "groq>=0.13.1,<0.14.0",
    "pyjwt>=2.6.0,<2.7.0",
    "requests>=2.31.0,<2.32.0",
    "lark-parser>=0.12.0,<0.13.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.1.0,<8.2.0",
    "pytest-benchmark>=5.1.0,<5.2.0",
    "pytest-cov>=4.1.0,<4.2.0",
    "black>=23.10.1,<23.11.0",
    "mypy>=0.950",
    "pre-commit>=3.5.0",
    "honcho>=1.1.0,<1.2.0",
    "types-setuptools",
]
test = [
    "pytest>=8.1.0,<8.2.0",
    "pytest-cov>=4.1.0,<4.2.0",
    "pytest-benchmark>=5.1.0,<5.2.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.18.0",
    "sphinx-copybutton>=0.5.0",
    "myst-parser>=0.18.0",
]

[project.urls]
"Homepage" = "https://github.com/westonvogelsong/snc-v3"
"Bug Tracker" = "https://github.com/westonvogelsong/snc-v3/issues"
"Documentation" = "https://github.com/westonvogelsong/snc-v3/docs"
"Source Code" = "https://github.com/westonvogelsong/snc-v3"
"Changelog" = "https://github.com/westonvogelsong/snc-v3/blob/main/CHANGELOG.md"

[project.scripts]
snc-db = "snc.script.create_database:main"

[tool.setuptools]
packages = ["snc"]

[tool.setuptools.dynamic]
version = {attr = "snc.__version__"}

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = false
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
ignore_missing_imports = true
exclude = [
    "tests/",
    "test/",
    "tools/benchmark/",
    "docs/",
    "build/",
    "dist/",
    ".git/",
    "__pycache__/",
]

[[tool.mypy.overrides]]
module = ["tests.*", "test.*", "tools.benchmark.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
warn_return_any = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_optional = false

[tool.pytest.ini_options]
testpaths = ["snc/test"]
python_files = ["test_*.py"]
addopts = "--cov=snc --cov-report=term-missing"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
source = ["snc"]
omit = ["snc/test/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "E501"]
exclude = ["docs/*", "tests/*", "benchmark/*"]
